---
- name: Swarm prepare
  hosts: all
  gather_facts: yes
  become: yes
  vars:
    folder_path: /home/robo/docker-volumes
    fstab_path: /etc/fstab
    cifs_detail: "//Unord-fil.efif.dk/HomeM-Z/R/robo/volumes/ /home/robo/docker-volumes cifs username={{ ansible_user }},password={{ ansible_sudo_pass }},iocharset=utf8,rw,uid=1000,sec=ntlmssp,vers=3.0 0 0"
  tasks:
  
    - name: Patch the server
      tags: Patch
      become: yes
      shell: "dnf upgrade -y"
      register: patchresult

    - name: Ensure /home/robo/docker-volumes directory exists
      ansible.builtin.file:
        path: "{{ folder_path }}"
        state: directory

    - name: Install cifs-utils
      ansible.builtin.dnf:
        name: cifs-utils
        state: latest

    - name: Ensure fstab contains the CIFS mount //Unord-fil.efif.dk/HomeM-Z/R/robo/volumes/
      ansible.builtin.mount:
        path: "{{ folder_path }}"
        src: "//Unord-fil.efif.dk/HomeM-Z/R/robo/volumes/"
        fstype: cifs
        opts: "username={{ ansible_user }},password={{ ansible_sudo_pass }},iocharset=utf8,rw,uid=1000,sec=ntlmssp,vers=3.0"
        state: present

    - name: Install fastfetch packages
      dnf:
        name:
          - fastfetch
        state: present

    - name: Uninstall Docker
      dnf:
        name: 
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: absent

    - name: Install dnf-plugins-core
      dnf:
        name: dnf-plugins-core
        state: present

    - name: Add Docker repo
      command: dnf config-manager addrepo --from-repofile=https://download.docker.com/linux/fedora/docker-ce.repo
      args:
        warn: no
      register: docker_repo_result
      changed_when: "'Repository successfully added' in docker_repo_result.stdout"

    - name: Install Docker packages
      dnf:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Enable and start Docker service
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Ensure docker group exists
      group:
        name: docker
        state: present

    - name: Add user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Download Node Exporter
      get_url:
        url: https://github.com/prometheus/node_exporter/releases/download/v1.3.1/node_exporter-1.3.1.linux-amd64.tar.gz
        dest: /tmp/node_exporter.tar.gz
        validate_certs: no

    - name: Extract Node Exporter
      unarchive:
        src: /tmp/node_exporter.tar.gz
        dest: /usr/local/bin/
        remote_src: yes
        creates: /usr/local/bin/node_exporter-1.3.1.linux-amd64

    - name: Move Node Exporter binary
      command: mv /usr/local/bin/node_exporter-1.3.1.linux-amd64/node_exporter /usr/local/bin/node_exporter
      args:
        creates: /usr/local/bin/node_exporter

    - name: Create systemd service
      copy:
        dest: /etc/systemd/system/node_exporter.service
        content: |
          [Unit]
          Description=Node Exporter
          After=network.target

          [Service]
          User=nobody
          ExecStart=/usr/local/bin/node_exporter

          [Install]
          WantedBy=default.target

    - name: Enable and start Node Exporter
      systemd:
        name: node_exporter
        enabled: yes
        state: started


    - name: Reboot the servers
      reboot:
